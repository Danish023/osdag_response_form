<?php
global $base_url; // Will point to http://www.example.com
/**
 * Implements hook_menu().
 */
function osdag_response_form_menu()
{
	$items = array();
	// Form page.
	$items['ddcl-osdag-response/form/step1'] = array(
		'title' => t('DDCL - Web Response Form'),
		'page callback' => 'ddcl_osdag_response_form_page',
		'page arguments' => array(),
		'access arguments' => array(
			'access osdag_feedback_form'
		)
	);
	$items['ddcl-osdag-response/form/step2'] = array(
		'title' => t('DDCL - Web Response Form'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'ddcl_osdag_response_step2_form'
		),
		'access arguments' => array(
			'access osdag_feedback_form'
		)
	);
	$items['ddcl-osdag-response/form/step3'] = array(
		'title' => t('DDCL - Web Response Form'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'ddcl_osdag_response_step3_form'
		),
		'access arguments' => array(
			'access osdag_feedback_form'
		)
	);
	// Success page.
	$items['ddcl-osdag-response/success'] = array(
		'title' => t('Test successful!'),
		'page callback' => 'test_success',
		'page arguments' => array(),
		'access arguments' => array(
			'access osdag_feedback_form'
		)
	);
	return $items;
}
function osdag_response_form_permission()
{
	return array(
		"access osdag_feedback_form" => array(
			"title" => t("osdag feedback form"),
			"description" => t("Allows users to view osdag feedback form")
		)
	);
}
/**
 * Fetches and displays the form.
 */
function ddcl_osdag_response_form_page()
{
	return drupal_get_form('ddcl_osdag_response_step1_form');
}
/**
 * Displays simple confirmation page after finishing the whole process.
 */
function test_success()
{
	return 'OK!';
}
/**
 * Generates the form.
 */
function ddcl_osdag_response_step1_form($form, &$form_state, $no_js_use = FALSE)
{
	global $user;
	global $base_url;
	// All the real form fields.
	$query = db_select('ddcl_osdag_response_form_step1_feedback');
	$query->fields('ddcl_osdag_response_form_step1_feedback');
	$query->condition('uid', $user->uid);
	$form_step1_data = $query->execute();
	if ($form_step1_data)
	{
		if ($step1_data = $form_step1_data->fetchObject())
		{
			/* everything ok */
		} //$step1_data = $form_step1_data->fetchObject()
		else
		{
			drupal_set_message(t('Invalid form selected. Please try again.'), 'error');
			//drupal_goto('lab_migration/manage_proposal');
			return;
		}
	} //$form_step1_data
	$form = array();
	$form['step1_field1_name'] = array(
		'#title' => 'Name',
		'#type' => 'textfield',
		'#default_value' => $step1_data->name
	);
	$form['step1_field2_email_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Email'),
		'#size' => 30,
		'#value' => $user->mail,
		'#disabled' => TRUE
		//'#default_value' => $form_state['storage']['values'][1]['step1_field2_email_id']
	);
	$form['step1_field3_institute'] = array(
		'#title' => 'Institute / Company',
		'#type' => 'textfield',
		'#default_value' => $step1_data->name
	);
	$form['step1_field4_current_position'] = array(
		'#title' => 'Current position',
		'#type' => 'textfield',
		'#default_value' => $step1_data->current_position
	);
	$form["step1_page_id"] = array(
		"#type" => "hidden",
		"#value" => "step1"
	);
	$form['next1'] = array(
		'#type' => 'submit',
		'#value' => 'Next',
		'#submit' => array(
			'ddcl_osdag_response_step1_form_submit'
		)
	);
	return $form;
}
function ddcl_osdag_response_step1_form_submit($form, &$form_state, $no_js_use = FALSE)
{
	global $user;
	$query = "INSERT INTO {ddcl_osdag_response_form_step1_feedback} (uid, name, email_id, institute, current_position, data_reletion) VALUES (:uid,:name,:email_id, :institute, :current_position, :data_reletion)";
	$args = array(
		":uid" => $user->uid,
		":name" => $form_state['values']['step1_field1_name'],
		":email_id" => $form_state['values']['step1_field2_email_id'],
		":institute" => $form_state['values']['step1_field3_institute'],
		":current_position" => $form_state['values']['step1_field4_current_position'],
		":data_reletion" => "step1"
	);
	db_query($query, $args);
	$form_state['redirect'] = 'ddcl-osdag-response/form/step2/' . $user->uid;
}
function ddcl_osdag_response_step2_form($form, &$form_state, $no_js_use = FALSE)
{
	global $base_url;
	global $user;
	// All the real form fields.
	$query = db_select('ddcl_osdag_response_form_step2_feedback');
	$query->fields('ddcl_osdag_response_form_step2_feedback');
	$query->condition('uid', $user->uid);
	$form_step2_data = $query->execute();
	if ($form_step2_data)
	{
		if ($step2_data = $form_step2_data->fetchObject())
		{
			/* everything ok */
		} //$step2_data = $form_step2_data->fetchObject()
		else
		{
			drupal_set_message(t('Invalid form selected. Please try again.'), 'error');
			//drupal_goto('lab_migration/manage_proposal');
			return;
		}
	} //$form_step2_data
	$img_path = $base_url . '/' . drupal_get_path("module", "osdag_response_form") . '/images';
	$step2_options = array(
		'100mm' => '100mm' . '
					<p>Reference: The connected leg is so chosen that at least two horizontal rows
of bolts can be accommodated. Hence, the assumed angle should have a leg
length of 100 mm or more. (Ref I - page 369 - Point 4 of 5.7.4)
</p>
					<img src="' . $img_path . '/100mm.png" />',
		'150mm' => '150mm' . '<p>Reference: The connected length is adopted in such a way that at least
three horizontal rows of rivets can be accommodated. In general, it is 150
mm or more (Ref II - Time 9:00)</p>
<img src="' . $img_path . '/150mm.png" width="70%" />',
		'Any other recommendation' => 'Any other recommendation'
	);
	$form = array();
	$form['step2_field1_fieldset'] = array(
		'#type' => 'fieldset',
		'#tree' => TRUE,
		'#prefix' => '<div id="step2-field1-fieldset-wrapper">',
		'#suffix' => '</div>'
	);
	$form['step2_field1_fieldset']['step2_field1_question1'] = array(
		'#title' => 'What should be the minimum length of the connected leg (to the support) of the seated angle?',
		'#type' => 'radios',
		'#options' => $step2_options,
		'#default_value' => $step2_data->question1
	);
	$form['step2_field1_fieldset']['step2_field2_reasoning_including_reference_from_literature'] = array(
		'#title' => 'Reasoning (including reference from literature):',
		'#type' => 'textarea',
		'#default_value' => $step2_data->any_other_recommendation,
		'#states' => array(
			'visible' => array(
				':input[name="step2_field1_fieldset\\[step2_field1_question1\\]"]' => array(
					array(
						'value' => t('Any other recommendation')
					)
				)
			)
		)
	);
	$form["step1_page_id"] = array(
		"#type" => "hidden",
		"#value" => "step1"
	);
	$form['previous1'] = array(
		'#type' => 'submit',
		'#value' => 'Previous',
		'#submit' => array(
			'ddcl_osdag_response_step2_form_previous_submit'
		)
	);
	$form['next2'] = array(
		'#type' => 'submit',
		'#value' => 'Next',
		'#submit' => array(
			'ddcl_osdag_response_step2_form_next_submit'
		)
	);
	return $form;
}
function ddcl_osdag_response_step2_form_previous_submit($form, &$form_state, $no_js_use = FALSE)
{
	global $user;
	$form_state['redirect'] = 'ddcl-osdag-response/form/step1/' . $user->uid;
}
function ddcl_osdag_response_step2_form_next_submit($form, &$form_state, $no_js_use = FALSE)
{
	global $user;
	$query = db_select('ddcl_osdag_response_form_step2_feedback');
	$query->fields('ddcl_osdag_response_form_step2_feedback');
	$query->condition('uid', $user->uid);
	$form_step2_data = $query->execute();
	if ($form_step2_data)
	{
		if ($step2_data = $form_step2_data->fetchObject())
		{
			/* everything ok */
		} //$step2_data = $form_step2_data->fetchObject()
		else
		{
			drupal_set_message(t('Invalid form selected. Please try again.'), 'error');
			//drupal_goto('lab_migration/manage_proposal');
			return;
		}
	} //$form_step2_data
	if ($form_step2_data)
	{
		$query = "UPDATE ddcl_osdag_response_form_step2_feedback SET question1=:question1, any_other_recommendation=:any_other_recommendation, data_relation=:data_relation WHERE uid=:uid ";
		$args = array(
			":uid" => $user->uid,
			":question1" => $form_state['values']['step2_field1_fieldset']['step2_field1_question1'],
			":any_other_recommendation" => $form_state['values']['step2_field1_fieldset']['step2_field2_reasoning_including_reference_from_literature'],
			":data_relation" => "step2"
		);
		db_query($query, $args);
	} //$form_step2_data
	else
	{
		$query = "INSERT INTO {ddcl_osdag_response_form_step2_feedback} (uid, question1, any_other_recommendation, data_relation) VALUES (:uid,:question1,:any_other_recommendation, :data_relation)";
		$args = array(
			":uid" => $user->uid,
			":question1" => $form_state['values']['step2_field1_fieldset']['step2_field1_question1'],
			":any_other_recommendation" => $form_state['values']['step2_field1_fieldset']['step2_field2_reasoning_including_reference_from_literature'],
			":data_relation" => "step2"
		);
		db_query($query, $args);
	}
	$form_state['redirect'] = 'ddcl-osdag-response/form/step3/' . $user->uid;
}
function ddcl_osdag_response_step3_form($form, &$form_state, $no_js_use = FALSE)
{
	global $base_url;
	$img_path = $base_url . '/' . drupal_get_path("module", "osdag_response_form") . '/images';
	return $form;
}
